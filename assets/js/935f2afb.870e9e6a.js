"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Home","href":"/docs/","docId":"home"},{"type":"link","label":"Installation","href":"/docs/installation","docId":"installation"},{"type":"category","label":"Guide","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Validation","href":"/docs/Guide/validation","docId":"Guide/validation"},{"type":"link","label":"Rules","href":"/docs/Guide/rules","docId":"Guide/rules"},{"type":"link","label":"Custom Validations","href":"/docs/Guide/customValidation","docId":"Guide/customValidation"}]}]},"docs":{"Guide/customValidation":{"id":"Guide/customValidation","title":"Custom Validations","description":"Implementing Custom Validation Rules","sidebar":"tutorialSidebar"},"Guide/rules":{"id":"Guide/rules","title":"Rules","description":"In formconductor library, validation rules can be applied using kotlin @Annotations. Rules can only be applied to specified type of properties and can be stacked to apply multiple rules.","sidebar":"tutorialSidebar"},"Guide/validation":{"id":"Guide/validation","title":"Validation","description":"How it works","sidebar":"tutorialSidebar"},"home":{"id":"home","title":"Home","description":"A declarative form validation library for Kotlin.","sidebar":"tutorialSidebar"},"installation":{"id":"installation","title":"Installation","description":"How to install form-conductor dependency to your project","sidebar":"tutorialSidebar"}}}')}}]);