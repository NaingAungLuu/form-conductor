"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[840],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=d(n),p=l,f=u["".concat(s,".").concat(p)]||u[p]||c[p]||i;return n?a.createElement(f,r(r({ref:t},m),{},{components:n})):a.createElement(f,r({ref:t},m))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:l,r[1]=o;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3612:(e,t,n)=>{n.d(t,{Z:()=>f});var a=n(7294),l=n(6010),i=n(5281),r=n(5999);const o="admonition_LlT9",s="admonitionHeading_tbUL",d="admonitionIcon_kALy",m="admonitionContent_S0QG";const u={note:{infimaClassName:"secondary",iconComponent:function(){return a.createElement("svg",{viewBox:"0 0 14 16"},a.createElement("path",{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))},label:a.createElement(r.Z,{id:"theme.admonition.note",description:"The default label used for the Note admonition (:::note)"},"note")},tip:{infimaClassName:"success",iconComponent:function(){return a.createElement("svg",{viewBox:"0 0 12 16"},a.createElement("path",{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))},label:a.createElement(r.Z,{id:"theme.admonition.tip",description:"The default label used for the Tip admonition (:::tip)"},"tip")},danger:{infimaClassName:"danger",iconComponent:function(){return a.createElement("svg",{viewBox:"0 0 12 16"},a.createElement("path",{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))},label:a.createElement(r.Z,{id:"theme.admonition.danger",description:"The default label used for the Danger admonition (:::danger)"},"danger")},info:{infimaClassName:"info",iconComponent:function(){return a.createElement("svg",{viewBox:"0 0 14 16"},a.createElement("path",{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))},label:a.createElement(r.Z,{id:"theme.admonition.info",description:"The default label used for the Info admonition (:::info)"},"info")},caution:{infimaClassName:"warning",iconComponent:function(){return a.createElement("svg",{viewBox:"0 0 16 16"},a.createElement("path",{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))},label:a.createElement(r.Z,{id:"theme.admonition.caution",description:"The default label used for the Caution admonition (:::caution)"},"caution")}},c={secondary:"note",important:"info",success:"tip",warning:"danger"};function p(e){const{mdxAdmonitionTitle:t,rest:n}=function(e){const t=a.Children.toArray(e),n=t.find((e=>a.isValidElement(e)&&"mdxAdmonitionTitle"===e.props?.mdxType)),l=a.createElement(a.Fragment,null,t.filter((e=>e!==n)));return{mdxAdmonitionTitle:n,rest:l}}(e.children);return{...e,title:e.title??t,children:n}}function f(e){const{children:t,type:n,title:r,icon:f}=p(e),v=function(e){const t=c[e]??e,n=u[t];return n||(console.warn(`No admonition config found for admonition type "${t}". Using Info as fallback.`),u.info)}(n),h=r??v.label,{iconComponent:g}=v,k=f??a.createElement(g,null);return a.createElement("div",{className:(0,l.Z)(i.k.common.admonition,i.k.common.admonitionType(e.type),"alert",`alert--${v.infimaClassName}`,o)},a.createElement("div",{className:s},a.createElement("span",{className:d},k),h),a.createElement("div",{className:m},t))}},5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),l=n(6010);const i="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(i,r),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(7462),l=n(7294),i=n(6010),r=n(2389),o=n(7392),s=n(7094),d=n(2466);const m="tabList__CuJ",u="tabItem_LNqP";function c(e){const{lazy:t,block:n,defaultValue:r,values:c,groupId:p,className:f}=e,v=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=c??v.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),g=(0,o.l)(h,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===r?r:r??v.find((e=>e.props.default))?.props.value??v[0].props.value;if(null!==k&&!h.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:F,setTabGroupChoices:b}=(0,s.U)(),[N,y]=(0,l.useState)(k),C=[],{blockElementScrollPositionUntilNextRender:S}=(0,d.o5)();if(null!=p){const e=F[p];null!=e&&e!==N&&h.some((t=>t.value===e))&&y(e)}const E=e=>{const t=e.currentTarget,n=C.indexOf(t),a=h[n].value;a!==N&&(S(t),y(a),null!=p&&b(p,String(a)))},R=e=>{let t=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const n=C.indexOf(e.currentTarget)+1;t=C[n]??C[0];break}case"ArrowLeft":{const n=C.indexOf(e.currentTarget)-1;t=C[n]??C[C.length-1];break}}t?.focus()};return l.createElement("div",{className:(0,i.Z)("tabs-container",m)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},f)},h.map((e=>{let{value:t,label:n,attributes:r}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>C.push(e),onKeyDown:R,onClick:E},r,{className:(0,i.Z)("tabs__item",u,r?.className,{"tabs__item--active":N===t})}),n??t)}))),t?(0,l.cloneElement)(v.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function p(e){const t=(0,r.Z)();return l.createElement(c,(0,a.Z)({key:String(t)},e))}},8552:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>f,frontMatter:()=>s,metadata:()=>m,toc:()=>c});var a=n(7462),l=(n(7294),n(3905)),i=n(3612),r=n(5488),o=n(5162);const s={title:"Validation",sidebar_position:1},d=void 0,m={unversionedId:"Guide/validation",id:"Guide/validation",title:"Validation",description:"How it works",source:"@site/docs/Guide/validation.md",sourceDirName:"Guide",slug:"/Guide/validation",permalink:"/docs/Guide/validation",draft:!1,editUrl:"https://github.com/naingaungluu/form-conductor/tree/documentation/docs/docs/Guide/validation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Validation",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"Rules",permalink:"/docs/Guide/rules"}},u={},c=[{value:"How it works",id:"how-it-works",level:2},{value:"Form Construction",id:"form-construction",level:2},{value:"Field Types",id:"field-types",level:3},{value:"Example",id:"example",level:4},{value:"Form Data Input",id:"form-data-input",level:2},{value:"Using <code>Form.setField</code>",id:"using-formsetfield",level:4},{value:"Using <code>FormField.setField</code>",id:"using-formfieldsetfield",level:4},{value:"Using <code>FormFieldScope.setField</code>",id:"using-formfieldscopesetfield",level:4},{value:"Using <code>Form.submit</code>",id:"using-formsubmit",level:4},{value:"Validation",id:"validation",level:2},{value:"Examples",id:"examples",level:3},{value:"Traditional Android UI",id:"traditional-android-ui",level:4},{value:"Jetpack Compose UI",id:"jetpack-compose-ui",level:4},{value:"Validation Rules",id:"validation-rules",level:3},{value:"Validation Results",id:"validation-results",level:2},{value:"FormResult",id:"formresult",level:3},{value:"FormResult.Success",id:"formresultsuccess",level:4},{value:"FormResult.Error",id:"formresulterror",level:4},{value:"FormResult.NoInput",id:"formresultnoinput",level:4},{value:"FieldResult",id:"fieldresult",level:3},{value:"FieldResult.Success",id:"fieldresultsuccess",level:4},{value:"FieldResult.Eror",id:"fieldresulteror",level:4},{value:"FieldResult.NoInput",id:"fieldresultnoinput",level:4}],p={toc:c};function f(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"how-it-works"},"How it works"),(0,l.kt)("p",null,"Form conductor performs validations based on the annotations on the form class. The annotations (together with the options) are converted into individual field validators under the hood, modifying the form's state as input events occur."),(0,l.kt)("mermaid",{value:"sequenceDiagram\n    Form Data Class->> Form Object: Validation Annotations\n    activate Form Object\n    Form Object ->> Form Object: Initialize Form\n    deactivate Form Object\n    Form Composable ->> Form Object: Input Events\n    activate Form Object\n    Form Object --\x3e> Form Composable: Validation Result State\n    deactivate Form Object"}),(0,l.kt)("h2",{id:"form-construction"},"Form Construction"),(0,l.kt)("p",null,"Form construction with ",(0,l.kt)("inlineCode",{parentName:"p"},"formconductor")," is as easy as annotating the form data class with ",(0,l.kt)("inlineCode",{parentName:"p"},"@Form")," annotation. Every instance of a ",(0,l.kt)("inlineCode",{parentName:"p"},"Form")," is associated to a ",(0,l.kt)("strong",{parentName:"p"},"Form Data Class"),". It is recommend to create a new data class for each type of form. Once the data class is associated to a ",(0,l.kt)("inlineCode",{parentName:"p"},"Form"),", the library will automatically create validators for every ",(0,l.kt)("em",{parentName:"p"},"declared property")," in the class. "),(0,l.kt)("h3",{id:"field-types"},"Field Types"),(0,l.kt)("p",null,"The library can accept every type of properties as long as it is a sub-class of ",(0,l.kt)("inlineCode",{parentName:"p"},"Any"),". "),(0,l.kt)("p",null,"This includes data types such as:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Primitive Types (",(0,l.kt)("strong",{parentName:"li"},"String"),", ",(0,l.kt)("strong",{parentName:"li"},"Boolean"),", ",(0,l.kt)("strong",{parentName:"li"},"Char"),", ",(0,l.kt)("strong",{parentName:"li"},"Int"),", ",(0,l.kt)("strong",{parentName:"li"},"Long"),", etc.)"),(0,l.kt)("li",{parentName:"ol"},"Enums"),(0,l.kt)("li",{parentName:"ol"},"Sealed classes"),(0,l.kt)("li",{parentName:"ol"},"Custom classes")),(0,l.kt)(i.Z,{type:"info",icon:"\u26cf\ufe0f",title:"Requirements",mdxType:"Admonition"},(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The properties (fields) must be declared as read-only variables (",(0,l.kt)("inlineCode",{parentName:"li"},"val"),")."),(0,l.kt)("li",{parentName:"ul"},"All properties should have a default value"))),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="SignUpForm.kt"',title:'"SignUpForm.kt"'},'@Form\ndata class SignUpForm(\n    val name: String = "",\n    val age: Int = 0,\n    val emailAddress: String = "",\n    val bio: String = "",\n    val gender: Gender = Gender.Male,\n    val address: Address? = null\n    val termsAndConditionAgreed: Boolean = false\n)\n\nenum class Gender {\n    Male,\n    Female\n}\n\ndata class Address(\n    val streeet: String,\n    val postalCode: String,\n    val state: String\n)\n\n')),(0,l.kt)("h2",{id:"form-data-input"},"Form Data Input"),(0,l.kt)("p",null,"You can input data in various ways using the library. Entered data entry will be validated in real-time."),(0,l.kt)("h4",{id:"using-formsetfield"},"Using ",(0,l.kt)("inlineCode",{parentName:"h4"},"Form.setField")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'val form = form(SignUpFormData::class)\n\n// highlight-next-line\nform.setField(SignUpFormData::name, "Harry")\n')),(0,l.kt)("h4",{id:"using-formfieldsetfield"},"Using ",(0,l.kt)("inlineCode",{parentName:"h4"},"FormField.setField")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'val form = form(SignUpFormData::class)\n\nval genderField = form.registerField(SignUpFormData::gender) // FormField<Gender>\nval addressField = form.registerField(SignUpFormData::address) // FormField<Address>\n\n// highlight-next-line\ngenderField.setField(Gender.Male)\n\n// highlight-start\naddressField.setField(\n    Address(\n        street = "128 Bird Street",\n        postalCode = "11221",\n        state = "Yangon"\n    )\n)\n// highlight-end\n')),(0,l.kt)("h4",{id:"using-formfieldscopesetfield"},"Using ",(0,l.kt)("inlineCode",{parentName:"h4"},"FormFieldScope.setField")),(0,l.kt)("p",null,"You can also set field value inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"field")," composable function, which is under the ",(0,l.kt)("inlineCode",{parentName:"p"},"FormFieldScope"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="SignUpForm.kt"',title:'"SignUpForm.kt"'},"\n@Composable\nfun SignUpForm() {\n    \n    form(SignUpForm::class) {\n        field(SignUpForm::name) { // FormFieldScope<String>\n            TextField(\n                // highlight-start\n                onValueChange = {\n                    setField(it)\n                }\n                // highlight-end\n            )\n        }\n    }\n\n}\n\n")),(0,l.kt)("h4",{id:"using-formsubmit"},"Using ",(0,l.kt)("inlineCode",{parentName:"h4"},"Form.submit")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'val form = form(SignUpFormData::class)\n\nform.submit(\n    SignUpFormData(\n        name = "Harry",\n        age = 1`,\n        emailAddress = "hello@example.com",\n        bio = "I\'m a pet lover",\n        gender = Gender.Male,\n        address = null\n        termsAndConditionAgreed = false\n    )\n) // FormResult.Success or FormResult.Error\n')),(0,l.kt)("h2",{id:"validation"},"Validation"),(0,l.kt)("p",null,"Form validations are executed by the ",(0,l.kt)("inlineCode",{parentName:"p"},"Form")," object automatically based on the annotations. All the validations are performed in real-time as you submit field values."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Example Form"',title:'"Example','Form"':!0},"@Form\ndata class SignUpFormData(\n    ...\n    @EmailAddress\n    val emailAddress: String\n    ...\n)\n")),(0,l.kt)("p",null,"To build a form, you can use either one of the following functions"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"me.naingaungluu.formconductor.builder.form()")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"me.naingaungluu.formconductor.composeui.form()"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"me.naingaungluu.formconductor.builder.form()")," is included in ",(0,l.kt)("inlineCode",{parentName:"p"},":core")," module and can be used as a normal function to build the form."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"me.naingaungluu.formconductor.composeui.form()")," is a ",(0,l.kt)("inlineCode",{parentName:"p"},"@Composable")," function and is included in the ",(0,l.kt)("inlineCode",{parentName:"p"},":compose-ui")," module to be used in composable ui's."),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)("h4",{id:"traditional-android-ui"},"Traditional Android UI"),(0,l.kt)(r.Z,{groupId:"example-paradigm",mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"declarative",label:"Declarative",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"import me.naingaungluu.formconductor.builder.form\n\n...\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n  super.onCreate(savedInstanceState)\n  \n  // Declarative Form Building\n  val formState = form(LoginForm::class) {\n\n      field(LoginForm::emailAddress) { // FormFieldScope<String>\n          etEmailAddress.doAfterTextChanged {\n              this.setField(it)\n          }\n          this.resultStream.collectLatest {...}\n      }\n\n      field(LoginForm::name) { // FormFieldScope<String>\n          etName.doAfterTextChanged {\n              this.setField(it)\n          }\n      }\n\n      this.formDataStream.collectLatest {\n          btnSignUp.isEnabled = it is FormResult.Success\n      }\n  }\n}\n"))),(0,l.kt)(o.Z,{value:"imperative",label:"Imperative",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"import me.naingaungluu.formconductor.builder.form\n\n...\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n\n     // Imperative Form Building\n    val formState = form(LoginForm::class)\n    val emailAddressState = form.registerField(LoginForm::emailAddress)\n    val passwordState = form.registerField(LoginForm::password)\n\n    etLogin.doAfterTextChanged {\n        emailAddressState.setField(it)\n    }\n    etPassword.doAfterTextChanged {\n        passwordState.setField(it)\n    }\n\n    emailAddresState.resultStream.collectLatest {\n        if (it is FieldResult.Error) {\n            // Handle Error\n        }\n    }\n    \n    formState.valueStream.collectLatest { result ->\n        btnLogin.enabled = (result is FormResult.Success)\n    }\n\n    btnLogin.setOnClickListener {\n        viewModel.login(formState.value)\n    }\n}\n")))),(0,l.kt)("h4",{id:"jetpack-compose-ui"},"Jetpack Compose UI"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'import me.naingaungluu.formconductor.composeui.form\n\n...\n\n@Composable\nfun SignUpFormScreen() {\n    form(SignUpFormData::class) {\n\n        field(SignUpFormData::name) {        \n            TextField(\n                value = this.state.observeAsState(),\n                onValueChange = this::setField,\n            )\n        }\n\n        field(SignUpFormData::emailAddress) {\n            TextField(\n                value = this.state.observeAsState(),\n                onValueChange = this::setField\n            )\n        }\n\n        val formResult = this.resultStream.observeAsState(FormResult.NoInput)\n\n        Button(\n            text = "Sign Up",\n            enabled = formResult is FormResult.Success\n        )\n    }\n}\n')),(0,l.kt)("h3",{id:"validation-rules"},"Validation Rules"),(0,l.kt)("p",null,"You can check out the various ways to apply validation rules ",(0,l.kt)("a",{parentName:"p",href:"./rules"},"here")),(0,l.kt)("h2",{id:"validation-results"},"Validation Results"),(0,l.kt)("p",null,"Form validations result in two different type of results: ",(0,l.kt)("inlineCode",{parentName:"p"},"FormResult")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"FieldResult"),". You can observe the ",(0,l.kt)("inlineCode",{parentName:"p"},"FieldResult")," for individual field result states or the ",(0,l.kt)("inlineCode",{parentName:"p"},"FormResult")," for the entire form validation result. "),(0,l.kt)("h3",{id:"formresult"},"FormResult"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FormResult")," value can be either one of the followings:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"FormResult.Success")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"FormResult.Error")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"FormResult.NoInput"))),(0,l.kt)("h4",{id:"formresultsuccess"},"FormResult.Success"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FormResult.Success")," is a sealed data class containing ",(0,l.kt)("inlineCode",{parentName:"p"},"data")," property with filled with form data."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Example"',title:'"Example"'},"val formResult: FormResult<SignUpFormData> = form.submit(...)\n\nif (formResult is FormResult.Success) {\n    val formData: SignUpFormData = formResult.data\n}\n")),(0,l.kt)("h4",{id:"formresulterror"},"FormResult.Error"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FormResult.Error")," is a sealed data class returned when any of the validations fail for a property in the form. The class contains a ",(0,l.kt)("inlineCode",{parentName:"p"},"failedRules")," property that holds the list of failed rules for the property."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Example"',title:'"Example"'},"val formResult: FormResult<SignUpFormData> = form.submit(...)\n\nif (formResult is FormResult.Error) {\n    formResult.failedRules.forEach { // VaildationRule\n        // handle error\n    }\n}\n")),(0,l.kt)("h4",{id:"formresultnoinput"},"FormResult.NoInput"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FormResult.NoInput")," is a special case or state when the form has no interaction at all. The form's state will always be in ",(0,l.kt)("inlineCode",{parentName:"p"},"FormResult.NoInput")," when it's just iniitalized and there's no interaction yet."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"val form = form(SignUpFormData::class)\n\nval state = form.formDataStream.first() // returns FormResult.NoInput\n")),(0,l.kt)("h3",{id:"fieldresult"},"FieldResult"),(0,l.kt)("p",null,"Quite Similarly to ",(0,l.kt)("inlineCode",{parentName:"p"},"FormResult"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"FieldResult")," has three states nearly identical. However, the ",(0,l.kt)("inlineCode",{parentName:"p"},"FieldResult")," represents the state of each field in the form."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FieldResult")," value can be either one of the followings:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"FieldResult.Success")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"FieldResult.Error")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("inlineCode",{parentName:"li"},"FieldResult.NoInput"))),(0,l.kt)("h4",{id:"fieldresultsuccess"},"FieldResult.Success"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FieldResult.Success")," is a sealed data class returned when all validations pass and there's no error."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Example"',title:'"Example"'},"val nameField = form.registerField(SignUpFormData::name)\n\nnameField.resultStream.collectLatest {\n    if (it is FieldResult.Success) {\n        // Validation Success\n    }\n}\n")),(0,l.kt)("h4",{id:"fieldresulteror"},"FieldResult.Eror"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FieldResult.Error"),"is a sealed data class returned when one of the validations failed for the field. The class contains a ",(0,l.kt)("inlineCode",{parentName:"p"},"failedRule")," property that holds the failed ",(0,l.kt)("inlineCode",{parentName:"p"},"ValidationRule")," instance. If multiple validation rules are applied, the ",(0,l.kt)("inlineCode",{parentName:"p"},"failedRule")," will hold the very first rule that failed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Example"',title:'"Example"'},"val emailAddressField = form.registerField(SignUpFormData::emailAddress)\n\nemailAddressField.resultStream.collectLatest {\n    if (it is FieldResult.Error) {\n        if (it.failedRule is EmailAddressRule) {\n            // Show Error\n        }\n    }\n}\n")),(0,l.kt)("h4",{id:"fieldresultnoinput"},"FieldResult.NoInput"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"FieldResult.NoInput")," is a special case or state where the field has no data input yet. It is usually the initial state of the field after it's just initialized. You'll also see this ",(0,l.kt)("inlineCode",{parentName:"p"},"NoInput")," state when user clears the text input."),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("inlineCode",{parentName:"p"},"NoInput")," is only a state and not an error indicating an empty mandatory field.")))}f.isMDXComponent=!0}}]);